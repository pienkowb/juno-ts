// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";

export class MsgChannelOpenInitResponse {
  static encode(message: MsgChannelOpenInitResponse, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.channelId);
  }

  static decode(reader: Reader, length: i32): MsgChannelOpenInitResponse {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new MsgChannelOpenInitResponse();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.channelId = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  channelId: string;

  constructor(channelId: string = "") {
    this.channelId = channelId;
  }
}

export function encodeMsgChannelOpenInitResponse(
  message: MsgChannelOpenInitResponse
): Uint8Array {
  return Protobuf.encode(message, MsgChannelOpenInitResponse.encode);
}

export function decodeMsgChannelOpenInitResponse(
  buffer: Uint8Array
): MsgChannelOpenInitResponse {
  return Protobuf.decode<MsgChannelOpenInitResponse>(
    buffer,
    MsgChannelOpenInitResponse.decode
  );
}
