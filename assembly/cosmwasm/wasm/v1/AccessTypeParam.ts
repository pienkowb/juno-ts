// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";
import { AccessType } from "./AccessType";

@unmanaged
export class AccessTypeParam {
  static encode(message: AccessTypeParam, writer: Writer): void {
    writer.uint32(8);
    writer.int32(message.value);
  }

  static decode(reader: Reader, length: i32): AccessTypeParam {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new AccessTypeParam();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.value = reader.int32();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  value: AccessType;

  constructor(value: AccessType = 0) {
    this.value = value;
  }
}

export function encodeAccessTypeParam(message: AccessTypeParam): Uint8Array {
  return Protobuf.encode(message, AccessTypeParam.encode);
}

export function decodeAccessTypeParam(buffer: Uint8Array): AccessTypeParam {
  return Protobuf.decode<AccessTypeParam>(buffer, AccessTypeParam.decode);
}
