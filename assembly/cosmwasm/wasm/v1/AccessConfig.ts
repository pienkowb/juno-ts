// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";
import { AccessType } from "./AccessType";

export class AccessConfig {
  static encode(message: AccessConfig, writer: Writer): void {
    writer.uint32(8);
    writer.int32(message.permission);

    writer.uint32(18);
    writer.string(message.address);
  }

  static decode(reader: Reader, length: i32): AccessConfig {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new AccessConfig();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.permission = reader.int32();
          break;

        case 2:
          message.address = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  permission: AccessType;
  address: string;

  constructor(permission: AccessType = 0, address: string = "") {
    this.permission = permission;
    this.address = address;
  }
}

export function encodeAccessConfig(message: AccessConfig): Uint8Array {
  return Protobuf.encode(message, AccessConfig.encode);
}

export function decodeAccessConfig(buffer: Uint8Array): AccessConfig {
  return Protobuf.decode<AccessConfig>(buffer, AccessConfig.decode);
}
